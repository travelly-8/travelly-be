# This is a basic workflow to help you get started with Actions

name: Travelly App Deployment

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # (1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CONFIG_TOKEN }}
          submodules: recursive

      # (2) JDK 21 세팅
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # (3) Gradle build
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Copy config files
        run: find config -type f ! -name 'readme.md' -exec cp -t src/main/resources/ {} +

      - name: Build with Gradle
        run: ./gradlew build
        
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/travelly .

      # (4) 도커 허브 로그인
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # (5) 도커 이미지 Push
      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/travelly
        
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # (6) EC2 에 도커 이미지 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/travelly
            docker stop travelly
            docker rm travelly
            docker run -d --name travelly -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/travelly
            docker image prune -f

